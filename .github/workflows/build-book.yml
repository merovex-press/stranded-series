name: Book Builder

on: [push]

jobs:
  build:
    name: Build the Book
    runs-on: ubuntu-latest
    steps:
      - name: Get repo
        uses: actions/checkout@v1
      - name: Run Pandoc Book (Docker)
        uses: docker://merovex/pandoc-book:latest |
          zip --junk-paths my-books
      - id: getfilename
        run: echo "::set-output name=file::$(ls build/*.*)"
      - uses: actions/upload-artifact@v1
        with:
          name: "books"
          path: build
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./my-books.zip
          asset_name: my-books.zip
          asset_content_type: application/zip
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v1
#     - name: Run a one-line script
#       run: echo Hello, world!
#     - name: Run a multi-line script
#       run: |
#         echo Add other actions to build,
#         echo test, and deploy your project.
#     - name: Upload artifact
#       uses: actions/upload-artifact@v1.0.0
#       with:
#         # Artifact name
#         name:
#         # Directory containing files to upload
#         path:
