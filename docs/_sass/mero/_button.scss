// %button
// This class defines a clickable element that looks like a label
// Variables
$mero-button-margin: $mero-separation / 2 0 !default;
$mero-button-padding: $mero-label-padding !default;
$mero-button-hover: inset 0 0 0 99em rgba(#FFF, $mero-transparency) !default;
$mero-button-click: inset 0 0 0 99em rgba(#000, $mero-transparency) !default;
$mero-button-pseudo-hover: inset 0 0 0 99em rgba($mero-black, $mero-transparency / 2) !default;
$mero-button-transition: $mero-transition !default;
$mero-button-radius: $mero-label-radius !default;

// Definition
%button {
  @extend %label;

  margin: $mero-button-margin;
  cursor: pointer;
  transition: $mero-button-transition;
  border-radius: $mero-button-radius;

  // Avoid the input { height: 2.2 }
  height: auto;
  vertical-align: baseline;
  font-family: $system-fonts;

  // This avoids a nasty "hover" issue (slightly taller on hover)
  box-shadow: 0 0 rgba($mero-black, 0) inset;

  // Methods
  &:hover,
  &:focus {
    box-shadow: $mero-button-hover;
    border: 0;
    }

  &.pseudo:hover,
  &.pseudo:focus {
    box-shadow: $mero-button-pseudo-hover;
    }

  &.active,
  &:active,
  &.pseudo:active {
    box-shadow: $mero-button-click;
    }

  &[disabled] {
    cursor: default;
    box-shadow: none;
    background: $mero-dull;
    }
  }


// // Note: If you try to do this there's a selector explossion:

// &%hover {
//   box-shadow: $mero-button-hover;
//   }

// &:hover {
//   @extend %hover;
//   }

// Like `button.button:hover, .button[type="submit"], ...`

// For the toggle buttons
:checked + .toggle,
:checked + .toggle:hover {
  box-shadow: $mero-button-click;
}

// Hide the checkbox/radiobutton
// Handle with care
[type] + .toggle {
  padding: $mero-button-padding;
  margin-right: 0;

  &:after,
  &:before {
    display: none;
  }
}

// Implement the abstract class for real elements
button,
.button,
[type=submit] {
  @extend %button;
  background: $mero-brand;
}
